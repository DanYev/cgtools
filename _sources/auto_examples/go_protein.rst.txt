
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/go_protein.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_go_protein.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_go_protein.py:


Simple CG Protein
=================

Simple Go-Martini setup

Author: DY

.. GENERATED FROM PYTHON SOURCE LINES 10-23

.. code-block:: Python


    import os
    import sys
    import numpy as np
    import pandas as pd
    import shutil
    import MDAnalysis as mda
    from pathlib import Path
    from reforge import cli, io, mdm
    from reforge.mdsystem.gmxmd import GmxSystem, GmxRun
    from reforge.utils import *  # Assuming this imports required utilities

    cli.run('rm -rf tests/test/*')

.. GENERATED FROM PYTHON SOURCE LINES 24-27

First, we need to initialize an instance of GmxSystem which will take care of pathing
and necessary files. This will use parent directory 'tests' relative to the current directory
and root directory 'test' in 'tests' for our system

.. GENERATED FROM PYTHON SOURCE LINES 27-28

.. code-block:: Python

    mdsys = GmxSystem(sysdir='tests', sysname='test')

.. GENERATED FROM PYTHON SOURCE LINES 29-30

This command will actually prepare the necessary files

.. GENERATED FROM PYTHON SOURCE LINES 30-31

.. code-block:: Python

    mdsys.prepare_files()

.. GENERATED FROM PYTHON SOURCE LINES 32-34

This will sort chains and atoms in our PDB to avoid conflicts in the future and make file 'inpdb.pdb',
which we can access later as mdsys.inpdb

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: Python

    mdsys.sort_input_pdb("../1btl.pdb")
    print(mdsys.inpdb)


.. GENERATED FROM PYTHON SOURCE LINES 38-40

Even though we don't need to have multiple chains in this case, this command splits our mdsys.inpdb
into separate chains and moves Proteins and RNA/DNA to their respective directories

.. GENERATED FROM PYTHON SOURCE LINES 40-42

.. code-block:: Python

    mdsys.split_chains()


.. GENERATED FROM PYTHON SOURCE LINES 43-61

.. code-block:: Python

    print("Results:", 42)
    import matplotlib.pyplot as plt
    plt.plot([1, 2, 3], [4, 5, 6])
    plt.show()  # Optional: Sphinx Gallery captures figures automatically
    plt.close()
    # Coarse-grain the proteins using martinize2 by Martini
    # mdsys.martinize_proteins_go(go_eps=10.0, go_low=0.3, go_up=1.0, p="backbone", pf=500, append=False)
    # Let's take a look at generated files:

    # # 4. Solvate and add ions.
    # solvent = os.path.join(mdsys.wdir, "water.gro")
    # mdsys.solvate(cp=mdsys.solupdb, cs=solvent)
    # mdsys.add_bulk_ions(conc=0.15, pname="NA", nname="CL")

    # # 5. Create index files.
    # mdsys.make_sys_ndx(backbone_atoms=["BB", "BB1", "BB3"])




.. _sphx_glr_download_auto_examples_go_protein.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: go_protein.ipynb <go_protein.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: go_protein.py <go_protein.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: go_protein.zip <go_protein.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
